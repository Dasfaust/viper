# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

ifeq ($(config),debug)
  RESCOMP = windres
  TARGETDIR = ../bin/debug-windows-x86_64/Engine
  TARGET = $(TARGETDIR)/Engine.dll
  OBJDIR = ../build/debug-windows-x86_64/Engine
  DEFINES += -DV3_WIN64 -DV3_WIN64_DLL -DV3_DEBUG
  INCLUDES += -I../vendor/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g /MDd
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g -std=c++17 /MDd
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lvulkan-1 -lglfw3dll -lglew32d -lopengl32
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -L../vendor/lib/win64 -LC:/VulkanSDK/1.1.97.0/Source/lib -L/usr/lib64 -m64 -shared -Wl,--out-implib="../bin/debug-windows-x86_64/Engine/Engine.lib"
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	IF EXIST ..\bin\debug-windows-x86_64\Engine\Engine.dll\ (xcopy /Q /E /Y /I ..\bin\debug-windows-x86_64\Engine\Engine.dll ..\vendor\lib\win64 > nul) ELSE (xcopy /Q /Y /I ..\bin\debug-windows-x86_64\Engine\Engine.dll ..\vendor\lib\win64 > nul)
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),release)
  RESCOMP = windres
  TARGETDIR = ../bin/release-windows-x86_64/Engine
  TARGET = $(TARGETDIR)/Engine.dll
  OBJDIR = ../build/release-windows-x86_64/Engine
  DEFINES += -DV3_WIN64 -DV3_WIN64_DLL -DV3_RELEASE
  INCLUDES += -I../vendor/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lvulkan-1 -lglfw3dll -lglew32d -lopengl32
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -L../vendor/lib/win64 -LC:/VulkanSDK/1.1.97.0/Source/lib -L/usr/lib64 -m64 -shared -Wl,--out-implib="../bin/release-windows-x86_64/Engine/Engine.lib" -s
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	IF EXIST ..\bin\release-windows-x86_64\Engine\Engine.dll\ (xcopy /Q /E /Y /I ..\bin\release-windows-x86_64\Engine\Engine.dll ..\vendor\lib\win64 > nul) ELSE (xcopy /Q /Y /I ..\bin\release-windows-x86_64\Engine\Engine.dll ..\vendor\lib\win64 > nul)
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),dist)
  RESCOMP = windres
  TARGETDIR = ../bin/dist-windows-x86_64/Engine
  TARGET = $(TARGETDIR)/Engine.dll
  OBJDIR = ../build/dist-windows-x86_64/Engine
  DEFINES += -DV3_WIN64 -DV3_WIN64_DLL -DV3_DIST
  INCLUDES += -I../vendor/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lvulkan-1 -lglfw3dll -lglew32d -lopengl32
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -L../vendor/lib/win64 -LC:/VulkanSDK/1.1.97.0/Source/lib -L/usr/lib64 -m64 -shared -Wl,--out-implib="../bin/dist-windows-x86_64/Engine/Engine.lib" -s
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	IF EXIST ..\bin\dist-windows-x86_64\Engine\Engine.dll\ (xcopy /Q /E /Y /I ..\bin\dist-windows-x86_64\Engine\Engine.dll ..\vendor\lib\win64 > nul) ELSE (xcopy /Q /Y /I ..\bin\dist-windows-x86_64\Engine\Engine.dll ..\vendor\lib\win64 > nul)
  endef
all: prebuild prelink $(TARGET)
	@:

endif

OBJECTS := \
	$(OBJDIR)/Logger.o \
	$(OBJDIR)/V3.o \
	$(OBJDIR)/ConfigLayer.o \
	$(OBJDIR)/EventLayer.o \
	$(OBJDIR)/PipelineOpenGL.o \
	$(OBJDIR)/ViewLayer.o \

RESOURCES := \

CUSTOMFILES := \

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

$(TARGET): $(GCH) ${CUSTOMFILES} $(OBJECTS) $(LDDEPS) $(RESOURCES) | $(TARGETDIR)
	@echo Linking Engine
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(CUSTOMFILES): | $(OBJDIR)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Engine
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) $(PCH) | $(OBJDIR)
$(GCH): $(PCH) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
else
$(OBJECTS): | $(OBJDIR)
endif

$(OBJDIR)/Logger.o: source/Logger.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/V3.o: source/V3.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ConfigLayer.o: source/config/ConfigLayer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/EventLayer.o: source/events/EventLayer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PipelineOpenGL.o: source/pipeline/PipelineOpenGL.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ViewLayer.o: source/view/ViewLayer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
endif