[basic_vertex=<
    #version 330 core
    layout(location = 0) in vec3 position;
    layout(location = 1) in vec2 texCoord;

    uniform mat4 model;
    uniform mat4 view;
    uniform mat4 projection;

    out vec2 vTexCoord;

    void main()
    {
        gl_Position = projection * view * model * vec4(position, 1.0);
        vTexCoord = texCoord;
    }
>]
[basic_fragment=<
    #version 330 core
    #extension GL_ARB_separate_shader_objects : enable

    layout(location = 0) out vec4 color;

    in vec2 vTexCoord;

    uniform vec4 uColor;
    uniform sampler2D uTexture;

    void main()
    {
        vec4 texColor = texture(uTexture, vTexCoord);
        color = texColor;
    }
>]